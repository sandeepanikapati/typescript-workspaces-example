pipeline {
    agent any
    environment {   
        // [Mandatory]
        // JFrog platform URL (This functionality requires version 3.29.0 or above of Xray)
        JF_URL = ${{ secrets.JF_URL }}

        // [Mandatory if JF_USER and JF_PASSWORD are not provided]
        // JFrog access token with 'read' permissions for Xray
        JF_ACCESS_TOKEN= ${{ secrets.JF_ACCESS_TOKEN }}

        // [Mandatory if JF_ACCESS_TOKEN is not provided]
        // JFrog user and password with 'read' permissions for Xray

        // [Mandatory]
        // Read and Write access to code, pull requests, security events, and workflows
     
        // [Mandatory]
        // GitHub enterprise server organization namespace
  
        // [Optional]
        // If the machine that runs Frogbot has no access to the internet, set the name of a remote repository 
        // in Artifactory, which proxies https://releases.jfrog.io/artifactory
        // The 'frogbot' executable and other tools it needs will be downloaded through this repository.
        JF_RELEASES_REPO= "jf-bot"

        //////////////////////////////////////////////////////////////////////////
        //   If your project uses a 'frogbot-config.yml' file, you can define   //
        //   the following variables inside the file, instead of here.          //
        //////////////////////////////////////////////////////////////////////////

        // [Mandatory if the two conditions below are met]
        // 1. The project uses npm, yarn 2, NuGet or .NET to download its dependencies
        // 2. The `installCommand` variable isn't set in your frogbot-config.yml file.
        //
        // The command that installs the project dependencies (e.g "npm i", "nuget restore" or "dotnet restore")
        JF_INSTALL_DEPS_CMD = "yarn install"

        // [Optional, default: "."]
        // Relative path to the root of the project in the Git repository
      
         
        // [Optional]
        // Xray Watches. Learn more about them here: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray+Watches
        // JF_WATCHES= <watch-1>,<watch-2>...<watch-n>
         
        // [Optional]
        // JFrog project. Learn more about it here: https://www.jfrog.com/confluence/display/JFROG/Projects
        // JF_PROJECT= <project-key>
         
        // [Optional, default: "FALSE"]
        // Displays all existing vulnerabilities, including the ones that were added by the pull request.
        JF_INCLUDE_ALL_VULNERABILITIES= "TRUE"
         
        // [Optional, default: "TRUE"]
        // Fails the Frogbot task if any security issue is found.
        // JF_FAIL= "FALSE"

        // [Optional, default: "TRUE"]
        // Relative path to a Pip requirements.txt file. If not set, the python project's dependencies are determined and scanned using the project setup.py file.
        // JF_REQUIREMENTS_FILE= ""

        // [Optional, Default: "TRUE"]
        // Use Gradle wrapper.
        // JF_USE_WRAPPER= "FALSE"
        // [Optional]
        // Frogbot will download the project dependencies if they're not cached locally. To download the
        // dependencies from a virtual repository in Artifactory, set the name of of the repository. There's no
        // need to set this value, if it is set in the frogbot-config.yml file.
         JF_DEPS_REPO= "uj-remote"
        // JF_BRANCH_NAME_TEMPLATE= "frogbot-f5393aed5510f959171738023a76740b3d8b8891"
    }
 stages {
             stage('Download Frogbot') {
                 steps {
                     // For Linux / MacOS runner:
                     sh """ curl -fLg "https://hts2.jfrog.io/artifactory/frogbot/v2/[RELEASE]/getFrogbot.sh" | sh"""
                     // For Windows runner:
                     // powershell """iwr https://releases.jfrog.io/artifactory/frogbot/v2/[RELEASE]/frogbot-windows-amd64/frogbot.exe -OutFile .\frogbot.exe"""
                 }
             }
             stage('Scan Pull Requests') {
                 steps {
                     sh "./frogbot scan-pull-requests"
                     // For Windows runner:
                     // powershell """.\frogbot.exe scan-pull-requests"""
                 }
             }
  
         }
     }
